{"version":3,"file":"ScrollTrigger.min.js","sources":["../src/ScrollTrigger.js"],"sourcesContent":["/*!\n * ScrollTrigger 3.5.0\n * https://greensock.com\n *\n * @license Copyright 2008-2020, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\n\nlet gsap, _coreInitted, _win, _doc, _docEl, _body, _root, _resizeDelay, _raf, _request, _toArray, _clamp, _time2, _syncInterval, _refreshing, _pointerIsDown, _transformProp, _i, _prevWidth, _prevHeight, _autoRefresh, _sort,\n\t_limitCallbacks, // if true, we'll only trigger callbacks if the active state toggles, so if you scroll immediately past both the start and end positions of a ScrollTrigger (thus inactive to inactive), neither its onEnter nor onLeave will be called. This is useful during startup.\n\t_startup = 1,\n\t_proxies = [],\n\t_scrollers = [],\n\t_getTime = Date.now,\n\t_time1 = _getTime(),\n\t_lastScrollTime = 0,\n\t_enabled = 1,\n\t_passThrough = v => v,\n\t_windowExists = () => typeof(window) !== \"undefined\",\n\t_getGSAP = () => gsap || (_windowExists() && (gsap = window.gsap) && gsap.registerPlugin && gsap),\n\t_isViewport = e => !!~_root.indexOf(e),\n\t_getProxyProp = (element, property) => ~_proxies.indexOf(element) && _proxies[_proxies.indexOf(element) + 1][property],\n\t_getScrollFunc = (element, {s, sc}) => {\n\t\tlet i = _scrollers.indexOf(element),\n\t\t\toffset = sc === _vertical.sc ? 1 : 2;\n\t\t!~i && (i = _scrollers.push(element) - 1);\n\t\treturn _scrollers[i + offset] || (_scrollers[i + offset] = _getProxyProp(element, s) || (_isViewport(element) ? sc : function(value) { return arguments.length ? (element[s] = value) : element[s]; }));\n\t},\n\t_getBoundsFunc = element => _getProxyProp(element, \"getBoundingClientRect\") || (_isViewport(element) ? () => {_winOffsets.width = _win.innerWidth; _winOffsets.height = _win.innerHeight; return _winOffsets;} : () => _getBounds(element)),\n\t_getSizeFunc = (scroller, isViewport, {d, d2, a}) => (a = _getProxyProp(scroller, \"getBoundingClientRect\")) ? () => a()[d] : () => (isViewport ? _win[\"inner\" + d2] : scroller[\"client\" + d2]) || 0,\n\t_getOffsetsFunc = (element, isViewport) => !isViewport || ~_proxies.indexOf(element) ? _getBoundsFunc(element) : () => _winOffsets,\n\t_maxScroll = (element, {s, d2, d, a}) => (s = \"scroll\" + d2) && (a = _getProxyProp(element, s)) ? a() - _getBoundsFunc(element)()[d] : _isViewport(element) ? Math.max(_docEl[s], _body[s]) - (_win[\"inner\" + d2] || _docEl[\"client\" + d2] || _body[\"client\" + d2]) : element[s] - element[\"offset\" + d2],\n\t_iterateAutoRefresh = (func, events) => {\n\t\tfor (let i = 0; i < _autoRefresh.length; i += 3) {\n\t\t\t(!events || ~events.indexOf(_autoRefresh[i+1])) && func(_autoRefresh[i], _autoRefresh[i+1], _autoRefresh[i+2]);\n\t\t}\n\t},\n\t_isString = value => typeof(value) === \"string\",\n\t_isFunction = value => typeof(value) === \"function\",\n\t_isNumber = value => typeof(value) === \"number\",\n\t_isObject = value => typeof(value) === \"object\",\n\t_callIfFunc = value => _isFunction(value) && value(),\n\t_combineFunc = (f1, f2) => () => {\n\t\tlet result1 = _callIfFunc(f1),\n\t\t\tresult2 = _callIfFunc(f2);\n\t\treturn () => {\n\t\t\t_callIfFunc(result1);\n\t\t\t_callIfFunc(result2);\n\t\t}\n\t},\n\t_abs = Math.abs,\n\t_scrollLeft = \"scrollLeft\",\n\t_scrollTop = \"scrollTop\",\n\t_left = \"left\",\n\t_top = \"top\",\n\t_right = \"right\",\n\t_bottom = \"bottom\",\n\t_width = \"width\",\n\t_height = \"height\",\n\t_Right = \"Right\",\n\t_Left = \"Left\",\n\t_Top = \"Top\",\n\t_Bottom = \"Bottom\",\n\t_padding = \"padding\",\n\t_margin = \"margin\",\n\t_Width = \"Width\",\n\t_Height = \"Height\",\n\t_px = \"px\",\n\t_horizontal = {s: _scrollLeft, p: _left, p2: _Left, os: _right, os2: _Right, d: _width, d2: _Width, a: \"x\", sc: function(value) { return arguments.length ? _win.scrollTo(value, _vertical.sc()) : _win.pageXOffset || _doc[_scrollLeft] || _docEl[_scrollLeft] || _body[_scrollLeft] || 0}},\n\t_vertical = {s: _scrollTop, p: _top, p2: _Top, os: _bottom, os2: _Bottom, d: _height, d2: _Height, a: \"y\", op: _horizontal, sc: function(value) { return arguments.length ? _win.scrollTo(_horizontal.sc(), value) : _win.pageYOffset || _doc[_scrollTop] || _docEl[_scrollTop] || _body[_scrollTop] || 0}},\n\t_getComputedStyle = element => _win.getComputedStyle(element),\n\t_makePositionable = element => element.style.position = (_getComputedStyle(element).position === \"absolute\") ? \"absolute\" : \"relative\", // if the element already has position: absolute, leave that, otherwise make it position: relative\n\t_setDefaults = (obj, defaults) => {\n\t\tfor (let p in defaults) {\n\t\t\t(p in obj) || (obj[p] = defaults[p]);\n\t\t}\n\t\treturn obj;\n\t},\n\t//_isInViewport = element => (element = _getBounds(element)) && !(element.top > (_win.innerHeight || _docEl.clientHeight) || element.bottom < 0 || element.left > (_win.innerWidth || _docEl.clientWidth) || element.right < 0) && element,\n\t_getBounds = (element, withoutTransforms) => {\n\t\tlet tween = withoutTransforms && _getComputedStyle(element)[_transformProp] !== \"matrix(1, 0, 0, 1, 0, 0)\" && gsap.to(element, {x: 0, y: 0, xPercent: 0, yPercent: 0, rotation: 0, rotationX: 0, rotationY: 0, scale: 1, skewX: 0, skewY: 0}).progress(1),\n\t\t\tbounds = element.getBoundingClientRect();\n\t\ttween && tween.progress(0).kill();\n\t\treturn bounds;\n\t},\n\t_getSize = (element, {d2}) => element[\"offset\" + d2] || element[\"client\" + d2] || 0,\n\t_getLabels = animation => {\n\t\treturn value => {\n\t\t\tlet a = [],\n\t\t\t\tlabels = animation.labels,\n\t\t\t\tduration = animation.duration(),\n\t\t\t\tp;\n\t\t\tfor (p in labels) {\n\t\t\t\ta.push(labels[p] / duration);\n\t\t\t}\n\t\t\treturn gsap.utils.snap(a, value);\n\t\t};\n\t},\n\t_multiListener = (func, element, types, callback) => types.split(\",\").forEach(type => func(element, type, callback)),\n\t_addListener = (element, type, func) => element.addEventListener(type, func, {passive: true}),\n\t_removeListener = (element, type, func) => element.removeEventListener(type, func),\n\t_markerDefaults = {startColor: \"green\", endColor: \"red\", indent: 0, fontSize: \"16px\", fontWeight:\"normal\"},\n\t_defaults = {toggleActions: \"play\", anticipatePin: 0},\n\t_keywords = {top: 0, left: 0, center: 0.5, bottom: 1, right: 1},\n\t_offsetToPx = (value, size) => {\n\t\tif (_isString(value)) {\n\t\t\tlet eqIndex = value.indexOf(\"=\"),\n\t\t\t\trelative = ~eqIndex ? +(value.charAt(eqIndex-1) + 1) * parseFloat(value.substr(eqIndex + 1)) : 0;\n\t\t\tif (relative) {\n\t\t\t\t(value.indexOf(\"%\") > eqIndex) && (relative *= size / 100);\n\t\t\t\tvalue = value.substr(0, eqIndex-1);\n\t\t\t}\n\t\t\tvalue = relative + ((value in _keywords) ? _keywords[value] * size : ~value.indexOf(\"%\") ? parseFloat(value) * size / 100 : parseFloat(value) || 0);\n\t\t}\n\t\treturn value;\n\t},\n\t_createMarker = (type, name, container, direction, {startColor, endColor, fontSize, indent, fontWeight}, offset, matchWidthEl) => {\n\t\tlet e = _doc.createElement(\"div\"),\n\t\t\tuseFixedPosition = _isViewport(container) || _getProxyProp(container, \"pinType\") === \"fixed\",\n\t\t\tisScroller = type.indexOf(\"scroller\") !== -1,\n\t\t\tparent = useFixedPosition ? _body : container,\n\t\t\tisStart = type.indexOf(\"start\") !== -1,\n\t\t\tcolor = isStart ? startColor : endColor,\n\t\t\tcss = \"border-color:\" + color + \";font-size:\" + fontSize + \";color:\" + color + \";font-weight:\" + fontWeight + \";pointer-events:none;white-space:nowrap;font-family:sans-serif,Arial;z-index:1000;padding:4px 8px;border-width:0;border-style:solid;\";\n\t\tcss += \"position:\" + (isScroller && useFixedPosition ? \"fixed;\" : \"absolute;\");\n\t\t(isScroller || !useFixedPosition) && (css += (direction === _vertical ? _right : _bottom) + \":\" + (offset + parseFloat(indent)) + \"px;\");\n\t\tmatchWidthEl && (css += \"box-sizing:border-box;text-align:left;width:\" + matchWidthEl.offsetWidth + \"px;\");\n\t\te._isStart = isStart;\n\t\te.setAttribute(\"class\", \"gsap-marker-\" + type);\n\t\te.style.cssText = css;\n\t\te.innerText = name || name === 0 ? type + \"-\" + name : type;\n\t\tparent.insertBefore(e, parent.children[0]);\n\t\te._offset = e[\"offset\" + direction.op.d2];\n\t\t_positionMarker(e, 0, direction, isStart);\n\t\treturn e;\n\t},\n\t_positionMarker = (marker, start, direction, flipped) => {\n\t\tlet vars = {display: \"block\"},\n\t\t\tside = direction[flipped ? \"os2\" : \"p2\"],\n\t\t\toppositeSide = direction[flipped ? \"p2\" : \"os2\"];\n\t\tmarker._isFlipped = flipped;\n\t\tvars[direction.a + \"Percent\"] = flipped ? -100 : 0;\n\t\tvars[direction.a] = flipped ? 1 : 0;\n\t\tvars[\"border\" + side + _Width] = 1;\n\t\tvars[\"border\" + oppositeSide + _Width] = 0;\n\t\tvars[direction.p] = start;\n\t\tgsap.set(marker, vars);\n\t},\n\t_triggers = [],\n\t_ids = {},\n\t_sync = () => _request || (_request = _raf(_updateAll)),\n\t_onScroll = () => {\n\t\tif (!_request) {\n\t\t\t_request = _raf(_updateAll);\n\t\t\t_lastScrollTime || _dispatch(\"scrollStart\");\n\t\t\t_lastScrollTime = _getTime();\n\t\t}\n\t},\n\t_onResize = () => !_refreshing && _resizeDelay.restart(true), // ignore resizes triggered by refresh()\n\t_listeners = {},\n\t_emptyArray = [],\n\t_media = [],\n\t_creatingMedia, // when ScrollTrigger.matchMedia() is called, we record the current media key here (like \"(min-width: 800px)\") so that we can assign it to everything that's created during that call. Then we can revert just those when necessary. In the ScrollTrigger's init() call, the _creatingMedia is recorded as a \"media\" property on the instance.\n\t_lastMediaTick,\n\t_onMediaChange = e => {\n\t\tlet tick = gsap.ticker.frame,\n\t\t\tmatches = [],\n\t\t\ti = 0;\n\t\tif (_lastMediaTick !== tick || _startup) {\n\t\t\t_revertAll();\n\t\t\tfor (; i < _media.length; i+=3) {\n\t\t\t\t_win.matchMedia(_media[i]).matches ? matches.push(i) : _revertAll(1, _media[i]) || (_isFunction(_media[i+2]) && _media[i+2]()); // Firefox doesn't update the \"matches\" property of the MediaQueryList object correctly - it only does so as it calls its change handler - so we must re-create a media query here to ensure it's accurate.\n\t\t\t}\n\t\t\t_revertRecorded(); // in case killing/reverting any of the animations actually added inline styles back.\n\t\t\tfor (i = 0; i < matches.length; i++) {\n\t\t\t\t_creatingMedia = _media[matches[i]];\n\t\t\t\t_media[matches[i]+2] = _media[matches[i]+1](e);\n\t\t\t}\n\t\t\t_creatingMedia = 0;\n\t\t\t_refreshAll(0, 1);\n\t\t\t_lastMediaTick = tick;\n\t\t\t_dispatch(\"matchMedia\");\n\t\t}\n\t},\n\t_softRefresh = () => _removeListener(ScrollTrigger, \"scrollEnd\", _softRefresh) || _refreshAll(true),\n\t_dispatch = type => (_listeners[type] && _listeners[type].map(f => f())) || _emptyArray,\n\t_savedStyles = [], // when ScrollTrigger.saveStyles() is called, the inline styles are recorded in this Array in a sequential format like [element, cssText, gsCache, media]. This keeps it very memory-efficient and fast to iterate through.\n\t_revertRecorded = media => {\n\t\tfor (let i = 0; i < _savedStyles.length; i+=4) {\n\t\t\tif (!media || _savedStyles[i+3] === media) {\n\t\t\t\t_savedStyles[i].style.cssText = _savedStyles[i+1];\n\t\t\t\t_savedStyles[i+2].uncache = 1;\n\t\t\t}\n\t\t}\n\t},\n\t_revertAll = (kill, media) => {\n\t\tlet trigger;\n\t\tfor (_i = 0; _i < _triggers.length; _i++) {\n\t\t\ttrigger = _triggers[_i];\n\t\t\tif (!media || trigger.media === media) {\n\t\t\t\tif (kill) {\n\t\t\t\t\ttrigger.kill(1);\n\t\t\t\t} else {\n\t\t\t\t\ttrigger.scroll.rec || (trigger.scroll.rec = trigger.scroll()); // record the scroll positions so that in each refresh() we can ensure that it doesn't shift. Remember, pinning can make things change around, especially if the same element is pinned multiple times. If one was already recorded, don't re-record because unpinning may have occurred and made it shorter.\n\t\t\t\t\ttrigger.revert();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_revertRecorded(media);\n\t\tmedia || _dispatch(\"revert\");\n\t},\n\t_refreshAll = (force, skipRevert) => {\n\t\tif (_lastScrollTime && !force) {\n\t\t\t_addListener(ScrollTrigger, \"scrollEnd\", _softRefresh);\n\t\t\treturn;\n\t\t}\n\t\tlet refreshInits = _dispatch(\"refreshInit\");\n\t\t_sort && ScrollTrigger.sort();\n\t\tskipRevert || _revertAll();\n\t\tfor (_i = 0; _i < _triggers.length; _i++) {\n\t\t\t_triggers[_i].refresh();\n\t\t}\n\t\trefreshInits.forEach(result => result && result.render && result.render(-1)); // if the onRefreshInit() returns an animation (typically a gsap.set()), revert it. This makes it easy to put things in a certain spot before refreshing for measurement purposes, and then put things back.\n\t\t_i = _triggers.length;\n\t\twhile (_i--) {\n\t\t\t_triggers[_i].scroll.rec = 0;\n\t\t}\n\t\t_dispatch(\"refresh\");\n\t},\n\t_lastScroll = 0,\n\t_direction = 1,\n\t_updateAll = () => {\n\t\tlet l = _triggers.length,\n\t\t\ttime = _getTime(),\n\t\t\trecordVelocity = time - _time1 >= 50,\n\t\t\tscroll = l && _triggers[0].scroll();\n\t\t_direction = _lastScroll > scroll ? -1 : 1;\n\t\t_lastScroll = scroll;\n\t\tif (recordVelocity) {\n\t\t\tif (_lastScrollTime && !_pointerIsDown && time - _lastScrollTime > 200) {\n\t\t\t\t_lastScrollTime = 0;\n\t\t\t\t_dispatch(\"scrollEnd\");\n\t\t\t}\n\t\t\t_time2 = _time1;\n\t\t\t_time1 = time;\n\t\t}\n\t\tif (_direction < 0) {\n\t\t\t_i = l;\n\t\t\twhile (_i--) {\n\t\t\t\t_triggers[_i] && _triggers[_i].update(0, recordVelocity);\n\t\t\t}\n\t\t\t_direction = 1;\n\t\t} else {\n\t\t\tfor (_i = 0; _i < l; _i++) {\n\t\t\t\t_triggers[_i] && _triggers[_i].update(0, recordVelocity);\n\t\t\t}\n\t\t}\n\t\t_request = 0;\n\t},\n\t_propNamesToCopy = [_left, _top, _bottom, _right, _margin + _Bottom, _margin + _Right, _margin + _Top, _margin + _Left, \"display\", \"flexShrink\", \"float\"],\n\t_stateProps = _propNamesToCopy.concat([_width, _height, \"boxSizing\", \"max\" + _Width, \"max\" + _Height, \"position\", _margin, _padding, _padding + _Top, _padding + _Right, _padding + _Bottom, _padding + _Left]),\n\t_swapPinOut = (pin, spacer, state) => {\n\t\t_setState(state);\n\t\tif (pin.parentNode === spacer) {\n\t\t\tlet parent = spacer.parentNode;\n\t\t\tif (parent) {\n\t\t\t\tparent.insertBefore(pin, spacer);\n\t\t\t\tparent.removeChild(spacer);\n\t\t\t}\n\t\t}\n\t},\n\t_swapPinIn = (pin, spacer, cs, spacerState) => {\n\t\tif (pin.parentNode !== spacer) {\n\t\t\tlet i = _propNamesToCopy.length,\n\t\t\t\tspacerStyle = spacer.style,\n\t\t\t\tpinStyle = pin.style,\n\t\t\t\tp;\n\t\t\twhile (i--) {\n\t\t\t\tp = _propNamesToCopy[i];\n\t\t\t\tspacerStyle[p] = cs[p];\n\t\t\t}\n\t\t\tspacerStyle.position = cs.position === \"absolute\" ? \"absolute\" : \"relative\";\n\t\t\t(cs.display === \"inline\") && (spacerStyle.display = \"inline-block\");\n\t\t\tpinStyle[_bottom] = pinStyle[_right] = \"auto\";\n\t\t\tspacerStyle.overflow = \"visible\";\n\t\t\tspacerStyle.boxSizing = \"border-box\";\n\t\t\tspacerStyle[_width] = _getSize(pin, _horizontal) + _px;\n\t\t\tspacerStyle[_height] = _getSize(pin, _vertical) + _px;\n\t\t\tspacerStyle[_padding] = pinStyle[_margin] = pinStyle[_top] = pinStyle[_left] = \"0\";\n\t\t\t_setState(spacerState);\n\t\t\tpinStyle[_width] = cs[_width];\n\t\t\tpinStyle[_height] = cs[_height];\n\t\t\tpinStyle[_padding] = cs[_padding];\n\t\t\tpin.parentNode.insertBefore(spacer, pin);\n\t\t\tspacer.appendChild(pin);\n\t\t}\n\t},\n\t_capsExp = /([A-Z])/g,\n\t_setState = state => {\n\t\tif (state) {\n\t\t\tlet style = state.t.style,\n\t\t\t\tl = state.length,\n\t\t\t\ti = 0,\n\t\t\t\tp, value;\n\t\t\tfor (; i < l; i +=2) {\n\t\t\t\tvalue = state[i+1];\n\t\t\t\tp = state[i];\n\t\t\t\tif (value) {\n\t\t\t\t\tstyle[p] = value;\n\t\t\t\t} else if (style[p]) {\n\t\t\t\t\tstyle.removeProperty(p.replace(_capsExp, \"-$1\").toLowerCase());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t_getState = element => { // returns an array with alternating values like [property, value, property, value] and a \"t\" property pointing to the target (element). Makes it fast and cheap.\n\t\tlet l = _stateProps.length,\n\t\t\tstyle = element.style,\n\t\t\tstate = [],\n\t\t\ti = 0;\n\t\tfor (; i < l; i++) {\n\t\t\tstate.push(_stateProps[i], style[_stateProps[i]]);\n\t\t}\n\t\tstate.t = element;\n\t\treturn state;\n\t},\n\t_copyState = (state, override, omitOffsets) => {\n\t\tlet result = [],\n\t\t\tl = state.length,\n\t\t\ti = omitOffsets ? 8 : 0, // skip top, left, right, bottom if omitOffsets is true\n\t\t\tp;\n\t\tfor (; i < l; i += 2) {\n\t\t\tp = state[i];\n\t\t\tresult.push(p, (p in override) ? override[p] : state[i+1]);\n\t\t}\n\t\tresult.t = state.t;\n\t\treturn result;\n\t},\n\t_winOffsets = {left:0, top:0},\n\t_parsePosition = (value, trigger, scrollerSize, direction, scroll, marker, markerScroller, self, scrollerBounds, borderWidth, useFixedPosition, scrollerMax) => {\n\t\t_isFunction(value) && (value = value(self));\n\t\tif (_isString(value) && value.substr(0,3) === \"max\") {\n\t\t\tvalue = scrollerMax + (value.charAt(4) === \"=\" ? _offsetToPx(\"0\" + value.substr(3), scrollerSize) : 0);\n\t\t}\n\t\tif (!_isNumber(value)) {\n\t\t\t_isFunction(trigger) && (trigger = trigger(self));\n\t\t\tlet element = _toArray(trigger)[0] || _body,\n\t\t\t\tbounds = _getBounds(element) || {},\n\t\t\t\toffsets = value.split(\" \"),\n\t\t\t\tlocalOffset, globalOffset, display;\n\t\t\tif ((!bounds || (!bounds.left && !bounds.top)) && _getComputedStyle(element).display === \"none\") { // if display is \"none\", it won't report getBoundingClientRect() properly\n\t\t\t\tdisplay = element.style.display;\n\t\t\t\telement.style.display = \"block\";\n\t\t\t\tbounds = _getBounds(element);\n\t\t\t\tdisplay ? (element.style.display = display) : element.style.removeProperty(\"display\");\n\t\t\t}\n\t\t\tlocalOffset = _offsetToPx(offsets[0], bounds[direction.d]);\n\t\t\tglobalOffset = _offsetToPx(offsets[1] || \"0\", scrollerSize);\n\t\t\tvalue = bounds[direction.p] - scrollerBounds[direction.p] - borderWidth + localOffset + scroll - globalOffset;\n\t\t\tmarkerScroller && _positionMarker(markerScroller, globalOffset, direction, (scrollerSize - globalOffset < 20 || (markerScroller._isStart && globalOffset > 20)));\n\t\t\tscrollerSize -= scrollerSize - globalOffset; // adjust for the marker\n\t\t} else if (markerScroller) {\n\t\t\t_positionMarker(markerScroller, scrollerSize, direction, true);\n\t\t}\n\t\tif (marker) {\n\t\t\tlet position = value + scrollerSize,\n\t\t\t\tisStart = marker._isStart;\n\t\t\tscrollerMax = \"scroll\" + direction.d2;\n\t\t\t_positionMarker(marker, position, direction, (isStart && position > 20) || (!isStart && (useFixedPosition ? Math.max(_body[scrollerMax], _docEl[scrollerMax]) : marker.parentNode[scrollerMax]) <= position + 1));\n\t\t\tif (useFixedPosition) {\n\t\t\t\tscrollerBounds = _getBounds(markerScroller);\n\t\t\t\tuseFixedPosition && (marker.style[direction.op.p] = (scrollerBounds[direction.op.p] - direction.op.m - marker._offset) + _px);\n\t\t\t}\n\t\t}\n\t\treturn Math.round(value);\n\t},\n\t_prefixExp = /(?:webkit|moz|length|cssText)/i,\n\t_reparent = (element, parent) => {\n\t\tif (element.parentNode !== parent) {\n\t\t\tlet style = element.style,\n\t\t\t\tp, cs;\n\t\t\tif (parent === _body) {\n\t\t\t\telement._stOrig = style.cssText; // record original inline styles so we can revert them later\n\t\t\t\tcs = _getComputedStyle(element);\n\t\t\t\tfor (p in cs) { // must copy all relevant styles to ensure that nothing changes visually when we reparent to the <body>. Skip the vendor prefixed ones.\n\t\t\t\t\tif (!+p && !_prefixExp.test(p) && cs[p] && typeof style[p] === \"string\" && p !== \"0\") {\n\t\t\t\t\t\tstyle[p] = cs[p];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstyle.cssText = element._stOrig;\n\t\t\t}\n\t\t\tparent.appendChild(element);\n\t\t}\n\t},\n\t// returns a function that can be used to tween the scroll position in the direction provided, and when doing so it'll add a .tween property to the FUNCTION itself, and remove it when the tween completes or gets killed. This gives us a way to have multiple ScrollTriggers use a central function for any given scroller and see if there's a scroll tween running (which would affect if/how things get updated)\n\t_getTweenCreator = (scroller, direction) => {\n\t\tlet getScroll = _getScrollFunc(scroller, direction),\n\t\t\tprop = \"_scroll\" + direction.p2, // add a tweenable property to the scroller that's a getter/setter function, like _scrollTop or _scrollLeft. This way, if someone does gsap.killTweensOf(scroller) it'll kill the scroll tween.\n\t\t\tlastScroll1, lastScroll2,\n\t\t\tgetTween = (scrollTo, vars, initialValue, change1, change2) => {\n\t\t\t\tlet tween = getTween.tween,\n\t\t\t\t\tonComplete = vars.onComplete,\n\t\t\t\t\tmodifiers = {};\n\t\t\t\ttween && tween.kill();\n\t\t\t\tlastScroll1 = initialValue;\n\t\t\t\tvars[prop] = scrollTo;\n\t\t\t\tvars.modifiers = modifiers;\n\t\t\t\tmodifiers[prop] = value => {\n\t\t\t\t\tvalue = getScroll();\n\t\t\t\t\tif (value !== lastScroll1 && value !== lastScroll2) { // if the user scrolls, kill the tween. iOS Safari intermittently misreports the scroll position, it may be the most recently-set one or the one before that!\n\t\t\t\t\t\ttween.kill();\n\t\t\t\t\t\tgetTween.tween = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = initialValue + change1 * tween.ratio + change2 * tween.ratio * tween.ratio;\n\t\t\t\t\t}\n\t\t\t\t\tlastScroll2 = lastScroll1;\n\t\t\t\t\treturn (lastScroll1 = Math.round(value));\n\t\t\t\t};\n\t\t\t\tvars.onComplete = () => {\n\t\t\t\t\tgetTween.tween = 0;\n\t\t\t\t\tonComplete && onComplete.call(tween);\n\t\t\t\t};\n\t\t\t\ttween = getTween.tween = gsap.to(scroller, vars);\n\t\t\t\treturn tween;\n\t\t\t};\n\t\tscroller[prop] = getScroll;\n\t\treturn getTween;\n\t};\n\n_horizontal.op = _vertical;\n\n\n\nexport class ScrollTrigger {\n\n\tconstructor(vars, animation) {\n\t\t_coreInitted || ScrollTrigger.register(gsap) || console.warn(\"Please gsap.registerPlugin(ScrollTrigger)\");\n\t\tthis.init(vars, animation);\n\t}\n\n\tinit(vars, animation) {\n\t\tthis.progress = 0;\n\t\tthis.vars && this.kill(1); // in case it's being initted again\n\t\tif (!_enabled) {\n\t\t\tthis.update = this.refresh = this.kill = _passThrough;\n\t\t\treturn;\n\t\t}\n\t\tvars = _setDefaults((_isString(vars) || _isNumber(vars) || vars.nodeType) ? {trigger: vars} : vars, _defaults);\n\t\tlet direction = vars.horizontal ? _horizontal : _vertical,\n\t\t\t{onUpdate, toggleClass, id, onToggle, onRefresh, scrub, trigger, pin, pinSpacing, invalidateOnRefresh, anticipatePin, onScrubComplete, onSnapComplete, once, snap, pinReparent} = vars,\n\t\t\tisToggle = !scrub && scrub !== 0,\n\t\t\tscroller = _toArray(vars.scroller || _win)[0],\n\t\t\tscrollerCache = gsap.core.getCache(scroller),\n\t\t\tisViewport = _isViewport(scroller),\n\t\t\tuseFixedPosition = \"pinType\" in vars ? vars.pinType === \"fixed\" : isViewport || _getProxyProp(scroller, \"pinType\") === \"fixed\",\n\t\t\tcallbacks = [vars.onEnter, vars.onLeave, vars.onEnterBack, vars.onLeaveBack],\n\t\t\ttoggleActions = isToggle && vars.toggleActions.split(\" \"),\n\t\t\tmarkers = \"markers\" in vars ? vars.markers : _defaults.markers,\n\t\t\tborderWidth = isViewport ? 0 : parseFloat(_getComputedStyle(scroller)[\"border\" + direction.p2 + _Width]) || 0,\n\t\t\tself = this,\n\t\t\tonRefreshInit = vars.onRefreshInit && (() => vars.onRefreshInit(self)),\n\t\t\tgetScrollerSize = _getSizeFunc(scroller, isViewport, direction),\n\t\t\tgetScrollerOffsets = _getOffsetsFunc(scroller, isViewport),\n\t\t\ttweenTo, pinCache, snapFunc, isReverted, scroll1, scroll2, start, end, markerStart, markerEnd, markerStartTrigger, markerEndTrigger, markerVars,\n\t\t\tchange, pinOriginalState, pinActiveState, pinState, spacer, offset, pinGetter, pinSetter, pinStart, pinChange, spacingStart, spacerState, markerStartSetter,\n\t\t\tmarkerEndSetter, cs, snap1, snap2, scrubTween, scrubSmooth, snapDurClamp, snapDelayedCall, prevProgress, prevScroll, prevAnimProgress;\n\n\t\tself.media = _creatingMedia;\n\t\tanticipatePin *= 45;\n\t\t_triggers.push(self);\n\t\tself.scroller = scroller;\n\t\tself.scroll = _getScrollFunc(scroller, direction);\n\t\tscroll1 = self.scroll();\n\t\tself.vars = vars;\n\t\tanimation = animation || vars.animation;\n\t\t(\"refreshPriority\" in vars) && (_sort = 1);\n\t\tscrollerCache.tweenScroll = scrollerCache.tweenScroll || {\n\t\t\ttop: _getTweenCreator(scroller, _vertical),\n\t\t\tleft: _getTweenCreator(scroller, _horizontal)\n\t\t};\n\t\tself.tweenTo = tweenTo = scrollerCache.tweenScroll[direction.p];\n\t\tif (animation) {\n\t\t\tanimation.vars.lazy = false;\n\t\t\tanimation._initted || (animation.vars.immediateRender !== false && vars.immediateRender !== false && animation.render(0, true, true));\n\t\t\tself.animation = animation.pause();\n\t\t\tanimation.scrollTrigger = self;\n\t\t\tscrubSmooth = _isNumber(scrub) && scrub;\n\t\t\tscrubSmooth && (scrubTween = gsap.to(animation, {ease: \"power3\", duration: scrubSmooth, onComplete: () => onScrubComplete && onScrubComplete(self)}));\n\t\t\tsnap1 = 0;\n\t\t\tid || (id = animation.vars.id);\n\t\t}\n\t\tif (snap) {\n\t\t\t_isObject(snap) || (snap = {snapTo: snap});\n\t\t\tgsap.set(isViewport ? [_body, _docEl] : scroller, {scrollBehavior: \"auto\"}); // smooth scrolling doesn't work with snap.\n\t\t\tsnapFunc = _isFunction(snap.snapTo) ? snap.snapTo : snap.snapTo === \"labels\" ? _getLabels(animation) : gsap.utils.snap(snap.snapTo);\n\t\t\tsnapDurClamp = snap.duration || {min: 0.1, max: 2};\n\t\t\tsnapDurClamp = _isObject(snapDurClamp) ? _clamp(snapDurClamp.min, snapDurClamp.max) : _clamp(snapDurClamp, snapDurClamp);\n\t\t\tsnapDelayedCall = gsap.delayedCall(snap.delay || (scrubSmooth / 2) || 0.1, () => {\n\t\t\t\tif (Math.abs(self.getVelocity()) < 10 && !_pointerIsDown) {\n\t\t\t\t\tlet totalProgress = animation && !isToggle ? animation.totalProgress() : self.progress,\n\t\t\t\t\t\tvelocity = ((totalProgress - snap2) / (_getTime() - _time2) * 1000) || 0,\n\t\t\t\t\t\tchange1 = _abs(velocity / 2) * velocity / 0.185,\n\t\t\t\t\t\tnaturalEnd = totalProgress + change1,\n\t\t\t\t\t\tendValue = _clamp(0, 1, snapFunc(naturalEnd, self)),\n\t\t\t\t\t\tscroll = self.scroll(),\n\t\t\t\t\t\tendScroll = Math.round(start + endValue * change),\n\t\t\t\t\t\ttween = tweenTo.tween;\n\t\t\t\t\tif (scroll <= end && scroll >= start && endScroll !== scroll) {\n\t\t\t\t\t\tif (tween && !tween._initted && tween.data <= Math.abs(endScroll - scroll)) { // there's an overlapping snap! So we must figure out which one is closer and let that tween live.\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttweenTo(endScroll, {\n\t\t\t\t\t\t\tduration: snapDurClamp(_abs( (Math.max(_abs(naturalEnd - totalProgress), _abs(endValue - totalProgress)) * 0.185 / velocity / 0.05) || 0)),\n\t\t\t\t\t\t\tease: snap.ease || \"power3\",\n\t\t\t\t\t\t\tdata: Math.abs(endScroll - scroll), // record the distance so that if another snap tween occurs (conflict) we can prioritize the closest snap.\n\t\t\t\t\t\t\tonComplete: () => {\n\t\t\t\t\t\t\t\tsnap1 = snap2 = animation && !isToggle ? animation.totalProgress() : self.progress;\n\t\t\t\t\t\t\t\tonSnapComplete && onSnapComplete(self);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, scroll, change1 * change, endScroll - scroll - change1 * change);\n\t\t\t\t\t}\n\t\t\t\t} else if (self.isActive) {\n\t\t\t\t\tsnapDelayedCall.restart(true);\n\t\t\t\t}\n\t\t\t}).pause();\n\t\t}\n\t\tid && (_ids[id] = self);\n\t\ttrigger = self.trigger = _toArray(trigger || pin)[0];\n\t\tpin = pin === true ? trigger : _toArray(pin)[0];\n\t\t_isString(toggleClass) && (toggleClass = {targets: trigger, className: toggleClass});\n\t\tif (pin) {\n\t\t\t(pinSpacing === false || pinSpacing === _margin) || (pinSpacing = !pinSpacing && _getComputedStyle(pin.parentNode).display === \"flex\" ? false : _padding); // if the parent is display: flex, don't apply pinSpacing by default.\n\t\t\tself.pin = pin;\n\t\t\tvars.force3D !== false && gsap.set(pin, {force3D: true});\n\t\t\tpinCache = gsap.core.getCache(pin);\n\t\t\tif (!pinCache.spacer) { // record the spacer and pinOriginalState on the cache in case someone tries pinning the same element with MULTIPLE ScrollTriggers - we don't want to have multiple spacers or record the \"original\" pin state after it has already been affected by another ScrollTrigger.\n\t\t\t\tpinCache.spacer = spacer = _doc.createElement(\"div\");\n\t\t\t\tspacer.setAttribute(\"class\", \"pin-spacer\" + (id ? \" pin-spacer-\" + id : \"\"));\n\t\t\t\tpinCache.pinState = pinOriginalState = _getState(pin);\n\t\t\t} else {\n\t\t\t\tpinOriginalState = pinCache.pinState;\n\t\t\t}\n\t\t\tself.spacer = spacer = pinCache.spacer;\n\t\t\tcs = _getComputedStyle(pin);\n\t\t\tspacingStart = cs[pinSpacing + direction.os2];\n\t\t\tpinGetter = gsap.getProperty(pin);\n\t\t\tpinSetter = gsap.quickSetter(pin, direction.a, _px);\n\t\t\t// pin.firstChild && !_maxScroll(pin, direction) && (pin.style.overflow = \"hidden\"); // protects from collapsing margins, but can have unintended consequences as demonstrated here: https://codepen.io/GreenSock/pen/1e42c7a73bfa409d2cf1e184e7a4248d so it was removed in favor of just telling people to set up their CSS to avoid the collapsing margins (overflow: hidden | auto is just one option. Another is border-top: 1px solid transparent).\n\t\t\t_swapPinIn(pin, spacer, cs);\n\t\t\tpinState = _getState(pin);\n\t\t}\n\t\tif (markers) {\n\t\t\tmarkerVars = _isObject(markers) ? _setDefaults(markers, _markerDefaults) : _markerDefaults;\n\t\t\tmarkerStartTrigger = _createMarker(\"scroller-start\", id, scroller, direction, markerVars, 0);\n\t\t\tmarkerEndTrigger = _createMarker(\"scroller-end\", id, scroller, direction, markerVars, 0, markerStartTrigger);\n\t\t\toffset = markerStartTrigger[\"offset\" + direction.op.d2];\n\t\t\tmarkerStart = _createMarker(\"start\", id, scroller, direction, markerVars, offset);\n\t\t\tmarkerEnd =_createMarker(\"end\", id, scroller, direction, markerVars, offset);\n\t\t\tif (!useFixedPosition) {\n\t\t\t\t_makePositionable(scroller);\n\t\t\t\tgsap.set([markerStartTrigger, markerEndTrigger], {force3D: true});\n\t\t\t\tmarkerStartSetter = gsap.quickSetter(markerStartTrigger, direction.a, _px);\n\t\t\t\tmarkerEndSetter = gsap.quickSetter(markerEndTrigger, direction.a, _px);\n\t\t\t}\n\t\t}\n\n\t\tself.revert = revert => {\n\t\t\tlet r = revert !== false || !self.enabled,\n\t\t\t\tprevRefreshing = _refreshing;\n\t\t\tif (r !== isReverted) {\n\t\t\t\tif (r) {\n\t\t\t\t\tprevScroll = Math.max(self.scroll(), self.scroll.rec || 0); // record the scroll so we can revert later (repositioning/pinning things can affect scroll position). In the static refresh() method, we first record all the scroll positions as a reference.\n\t\t\t\t\tprevProgress = self.progress;\n\t\t\t\t\tprevAnimProgress = animation && animation.progress();\n\t\t\t\t}\n\t\t\t\tmarkerStart && [markerStart, markerEnd, markerStartTrigger, markerEndTrigger].forEach(m => m.style.display = r ? \"none\" : \"block\");\n\t\t\t\tr && (_refreshing = 1);\n\t\t\t\tself.update(r); // make sure the pin is back in its original position so that all the measurements are correct.\n\t\t\t\t_refreshing = prevRefreshing;\n\t\t\t\tpin && (r ? _swapPinOut(pin, spacer, pinOriginalState) : (!pinReparent || !self.isActive) && _swapPinIn(pin, spacer, _getComputedStyle(pin), spacerState));\n\t\t\t\tisReverted = r;\n\t\t\t}\n\t\t}\n\n\n\t\tself.refresh = soft => {\n\t\t\tif (_refreshing || !self.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (pin && soft && _lastScrollTime) {\n\t\t\t\t_addListener(ScrollTrigger, \"scrollEnd\", _softRefresh);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_refreshing = 1;\n\t\t\tscrubTween && scrubTween.kill();\n\t\t\tinvalidateOnRefresh && animation && animation.progress(0).invalidate();\n\t\t\tisReverted || self.revert();\n\t\t\tlet size = getScrollerSize(),\n\t\t\t\tscrollerBounds = getScrollerOffsets(),\n\t\t\t\tmax = _maxScroll(scroller, direction),\n\t\t\t\toffset = 0,\n\t\t\t\totherPinOffset = 0,\n\t\t\t\tparsedEnd = vars.end,\n\t\t\t\tparsedEndTrigger = vars.endTrigger || trigger,\n\t\t\t\tparsedStart = vars.start || (pin || !trigger ? \"0 0\" : \"0 100%\"),\n\t\t\t\ttriggerIndex = (trigger && Math.max(0, _triggers.indexOf(self))) || 0,\n\t\t\t\ti = triggerIndex,\n\t\t\t\tcs, bounds, scroll, isVertical, override, curTrigger, curPin, oppositeScroll;\n\t\t\twhile (i--) { // user might try to pin the same element more than once, so we must find any prior triggers with the same pin, revert them, and determine how long they're pinning so that we can offset things appropriately. Make sure we revert from last to first so that things \"rewind\" properly.\n\t\t\t\tcurPin = _triggers[i].pin;\n\t\t\t\tcurPin && (curPin === trigger || curPin === pin) && _triggers[i].revert();\n\t\t\t}\n\t\t\tstart = _parsePosition(parsedStart, trigger, size, direction, self.scroll(), markerStart, markerStartTrigger, self, scrollerBounds, borderWidth, useFixedPosition, max) || (pin ? -0.001 : 0);\n\t\t\t_isFunction(parsedEnd) && (parsedEnd = parsedEnd(self));\n\t\t\tif (_isString(parsedEnd) && !parsedEnd.indexOf(\"+=\")) {\n\t\t\t\tif (~parsedEnd.indexOf(\" \")) {\n\t\t\t\t\tparsedEnd = (_isString(parsedStart) ? parsedStart.split(\" \")[0] : \"\") + parsedEnd;\n\t\t\t\t} else {\n\t\t\t\t\toffset = _offsetToPx(parsedEnd.substr(2), size);\n\t\t\t\t\tparsedEnd = _isString(parsedStart) ? parsedStart : start + offset; // _parsePosition won't factor in the offset if the start is a number, so do it here.\n\t\t\t\t\tparsedEndTrigger = trigger;\n\t\t\t\t}\n\t\t\t}\n\t\t\tend = Math.max(start, _parsePosition(parsedEnd || (parsedEndTrigger ? \"100% 0\" : max), parsedEndTrigger, size, direction, self.scroll() + offset, markerEnd, markerEndTrigger, self, scrollerBounds, borderWidth, useFixedPosition, max)) || -0.001;\n\t\t\tchange = (end - start) || ((start -= 0.01) && 0.001);\n\n\t\t\toffset = 0;\n\t\t\ti = triggerIndex;\n\t\t\twhile (i--) {\n\t\t\t\tcurTrigger = _triggers[i];\n\t\t\t\tcurPin = curTrigger.pin;\n\t\t\t\tif (curPin && curTrigger.start - curTrigger._pinPush < start) {\n\t\t\t\t\tcs = curTrigger.end - curTrigger.start;\n\t\t\t\t\tcurPin === trigger && (offset += cs);\n\t\t\t\t\tcurPin === pin && (otherPinOffset += cs);\n\t\t\t\t}\n\t\t\t}\n\t\t\tstart += offset;\n\t\t\tend += offset;\n\t\t\tself._pinPush = otherPinOffset;\n\t\t\tif (markerStart && offset) { // offset the markers if necessary\n\t\t\t\tcs = {};\n\t\t\t\tcs[direction.a] = \"+=\" + offset;\n\t\t\t\tgsap.set([markerStart, markerEnd], cs);\n\t\t\t}\n\n\t\t\tif (pin) {\n\t\t\t\tcs = _getComputedStyle(pin);\n\t\t\t\tisVertical = direction === _vertical;\n\t\t\t\tscroll = self.scroll(); // recalculate because the triggers can affect the scroll\n\t\t\t\tpinStart = parseFloat(pinGetter(direction.a)) + otherPinOffset;\n\t\t\t\t_swapPinIn(pin, spacer, cs);\n\t\t\t\tpinState = _getState(pin);\n\t\t\t\t// transforms will interfere with the top/left/right/bottom placement, so remove them temporarily. getBoundingClientRect() factors in transforms.\n\t\t\t\tbounds = _getBounds(pin, true);\n\t\t\t\toppositeScroll = useFixedPosition && _getScrollFunc(scroller, isVertical ? _horizontal : _vertical)();\n\t\t\t\tif (pinSpacing) {\n\t\t\t\t\tspacerState = [pinSpacing + direction.os2, change + otherPinOffset + _px];\n\t\t\t\t\tspacerState.t = spacer;\n\t\t\t\t\ti = (pinSpacing === _padding) ? _getSize(pin, direction) + change + otherPinOffset : 0;\n\t\t\t\t\ti && spacerState.push(direction.d, i + _px); // for box-sizing: border-box (must include padding).\n\t\t\t\t\t_setState(spacerState);\n\t\t\t\t\tuseFixedPosition && self.scroll(prevScroll);\n\t\t\t\t}\n\t\t\t\tif (useFixedPosition) {\n\t\t\t\t\toverride = {\n\t\t\t\t\t\ttop: (bounds.top + (isVertical ? scroll - start : oppositeScroll)) + _px,\n\t\t\t\t\t\tleft: (bounds.left + (isVertical ? oppositeScroll : scroll - start)) + _px,\n\t\t\t\t\t\tboxSizing: \"border-box\",\n\t\t\t\t\t\tposition: \"fixed\"\n\t\t\t\t\t};\n\t\t\t\t\toverride[_width] = override[\"max\" + _Width] = Math.ceil(bounds.width) + _px;\n\t\t\t\t\toverride[_height] = override[\"max\" + _Height] = Math.ceil(bounds.height) + _px;\n\t\t\t\t\toverride[_margin] = override[_margin + _Top] = override[_margin + _Right] = override[_margin + _Bottom] = override[_margin + _Left] = \"0\";\n\t\t\t\t\toverride[_padding] = cs[_padding];\n\t\t\t\t\toverride[_padding + _Top] = cs[_padding + _Top];\n\t\t\t\t\toverride[_padding + _Right] = cs[_padding + _Right];\n\t\t\t\t\toverride[_padding + _Bottom] = cs[_padding + _Bottom];\n\t\t\t\t\toverride[_padding + _Left] = cs[_padding + _Left];\n\t\t\t\t\tpinActiveState = _copyState(pinOriginalState, override, pinReparent);\n\t\t\t\t}\n\t\t\t\tif (animation) { // the animation might be affecting the transform, so we must jump to the end, check the value, and compensate accordingly. Otherwise, when it becomes unpinned, the pinSetter() will get set to a value that doesn't include whatever the animation did.\n\t\t\t\t\tanimation.progress(1, true);\n\t\t\t\t\tpinChange = pinGetter(direction.a) - pinStart + change + otherPinOffset;\n\t\t\t\t\tchange !== pinChange && pinActiveState.splice(pinActiveState.length - 2, 2); // transform is the last property/value set in the state Array. Since the animation is controlling that, we should omit it.\n\t\t\t\t\tanimation.progress(0, true);\n\t\t\t\t} else {\n\t\t\t\t\tpinChange = change\n\t\t\t\t}\n\t\t\t} else if (trigger && self.scroll()) { // it may be INSIDE a pinned element, so walk up the tree and look for any elements with _pinOffset to compensate because anything with pinSpacing that's already scrolled would throw off the measurements in getBoundingClientRect()\n\t\t\t\tbounds = trigger.parentNode;\n\t\t\t\twhile (bounds && bounds !== _body) {\n\t\t\t\t\tif (bounds._pinOffset) {\n\t\t\t\t\t\tstart -= bounds._pinOffset;\n\t\t\t\t\t\tend -= bounds._pinOffset;\n\t\t\t\t\t}\n\t\t\t\t\tbounds = bounds.parentNode;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (i = 0; i < triggerIndex; i++) { // make sure we revert from first to last to make sure things reach their end state properly\n\t\t\t\tcurTrigger = _triggers[i].pin;\n\t\t\t\tcurTrigger && (curTrigger === trigger || curTrigger === pin) && _triggers[i].revert(false);\n\t\t\t}\n\t\t\tself.start = start;\n\t\t\tself.end = end;\n\t\t\tscroll1 = scroll2 = self.scroll(); // reset velocity\n\t\t\tscroll1 < prevScroll && self.scroll(prevScroll);\n\t\t\tself.revert(false);\n\t\t\t_refreshing = 0;\n\t\t\tprevAnimProgress && isToggle && animation.progress(prevAnimProgress, true);\n\t\t\tif (prevProgress !== self.progress) { // ensures that the direction is set properly (when refreshing, progress is set back to 0 initially, then back again to wherever it needs to be) and that callbacks are triggered.\n\t\t\t\tscrubTween && animation.totalProgress(prevProgress, true); // to avoid issues where animation callbacks like onStart aren't triggered.\n\t\t\t\tself.progress = prevProgress;\n\t\t\t\tself.update();\n\t\t\t}\n\t\t\tpin && pinSpacing && (spacer._pinOffset = Math.round(self.progress * pinChange));\n\t\t\tonRefresh && onRefresh(self);\n\t\t};\n\n\t\tself.getVelocity = () => ((self.scroll() - scroll2) / (_getTime() - _time2) * 1000) || 0;\n\n\t\tself.update = (reset, recordVelocity) => {\n\t\t\tlet scroll = self.scroll(),\n\t\t\t\tp = reset ? 0 : (scroll - start) / change,\n\t\t\t\tclipped = p < 0 ? 0 : p > 1 ? 1 : p || 0,\n\t\t\t\tprevProgress = self.progress,\n\t\t\t\tisActive, wasActive, toggleState, action, stateChanged, toggled;\n\t\t\tif (recordVelocity) {\n\t\t\t\tscroll2 = scroll1;\n\t\t\t\tscroll1 = scroll;\n\t\t\t\tif (snap) {\n\t\t\t\t\tsnap2 = snap1;\n\t\t\t\t\tsnap1 = animation && !isToggle ? animation.totalProgress() : clipped;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// anticipate the pinning a few ticks ahead of time based on velocity to avoid a visual glitch due to the fact that most browsers do scrolling on a separate thread (not synced with requestAnimationFrame).\n\t\t\t(anticipatePin && !clipped && pin && !_refreshing && !_startup && _lastScrollTime && start < scroll + ((scroll - scroll2) / (_getTime() - _time2)) * anticipatePin) && (clipped = 0.0001);\n\t\t\tif (clipped !== prevProgress && self.enabled) {\n\t\t\t\tisActive = self.isActive = !!clipped && clipped < 1;\n\t\t\t\twasActive = !!prevProgress && prevProgress < 1;\n\t\t\t\ttoggled = isActive !== wasActive;\n\t\t\t\tstateChanged = toggled || !!clipped !== !!prevProgress; // could go from start all the way to end, thus it didn't toggle but it did change state in a sense (may need to fire a callback)\n\t\t\t\tself.direction = clipped > prevProgress ? 1 : -1;\n\t\t\t\tself.progress = clipped;\n\t\t\t\tif (!isToggle) {\n\t\t\t\t\tif (scrubTween && !_refreshing && !_startup) {\n\t\t\t\t\t\tscrubTween.vars.totalProgress = clipped;\n\t\t\t\t\t\tscrubTween.invalidate().restart();\n\t\t\t\t\t} else if (animation) {\n\t\t\t\t\t\tanimation.totalProgress(clipped, !!_refreshing);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pin) {\n\t\t\t\t\treset && pinSpacing && (spacer.style[pinSpacing + direction.os2] = spacingStart);\n\t\t\t\t\tif (!useFixedPosition) {\n\t\t\t\t\t\tpinSetter(pinStart + pinChange * clipped);\n\t\t\t\t\t} else if (stateChanged) {\n\t\t\t\t\t\taction = !reset && clipped > prevProgress && end + 1 > scroll && scroll + 1 >= _maxScroll(scroller, direction); // if it's at the VERY end of the page, don't switch away from position: fixed because it's pointless and it could cause a brief flash when the user scrolls back up (when it gets pinned again)\n\t\t\t\t\t\tif (pinReparent) {\n\t\t\t\t\t\t\tif (!reset && (isActive || action)) {\n\t\t\t\t\t\t\t\tlet bounds = _getBounds(pin, true),\n\t\t\t\t\t\t\t\t\toffset = scroll - start;\n\t\t\t\t\t\t\t\tpin.style.top = (bounds.top + (direction === _vertical ? offset : 0)) + _px;\n\t\t\t\t\t\t\t\tpin.style.left = (bounds.left + (direction === _vertical ? 0 : offset)) + _px;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t_reparent(pin, !reset && (isActive || action) ? _body : spacer);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_setState(isActive || action ? pinActiveState : pinState);\n\t\t\t\t\t\t(pinChange !== change && clipped < 1 && isActive) || pinSetter(pinStart + (clipped === 1 && !action ? pinChange : 0));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsnap && !tweenTo.tween && !_refreshing && !_startup && snapDelayedCall.restart(true);\n\t\t\t\ttoggleClass && (toggled || (once && clipped && (clipped < 1 || !_limitCallbacks))) && _toArray(toggleClass.targets).forEach(el => el.classList[isActive || once ? \"add\" : \"remove\"](toggleClass.className)); // classes could affect positioning, so do it even if reset or refreshing is true.\n\t\t\t\tonUpdate && !isToggle && !reset && onUpdate(self);\n\t\t\t\tif (stateChanged && !_refreshing) {\n\t\t\t\t\ttoggleState = clipped && !prevProgress ? 0 : clipped === 1 ? 1 : prevProgress === 1 ? 2 : 3; // 0 = enter, 1 = leave, 2 = enterBack, 3 = leaveBack (we prioritize the FIRST encounter, thus if you scroll really fast past the onEnter and onLeave in one tick, it'd prioritize onEnter.\n\t\t\t\t\tif (isToggle) {\n\t\t\t\t\t\taction = (!toggled && toggleActions[toggleState + 1] !== \"none\" && toggleActions[toggleState + 1]) || toggleActions[toggleState]; // if it didn't toggle, that means it shot right past and since we prioritize the \"enter\" action, we should switch to the \"leave\" in this case (but only if one is defined)\n\t\t\t\t\t\tif (animation && (action === \"complete\" || action === \"reset\" || action in animation)) {\n\t\t\t\t\t\t\tif (action === \"complete\") {\n\t\t\t\t\t\t\t\tanimation.pause().totalProgress(1);\n\t\t\t\t\t\t\t} else if (action === \"reset\") {\n\t\t\t\t\t\t\t\tanimation.restart(true).pause();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tanimation[action]();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonUpdate && onUpdate(self);\n\t\t\t\t\t}\n\t\t\t\t\tif (toggled || !_limitCallbacks) { // on startup, the page could be scrolled and we don't want to fire callbacks that didn't toggle. For example onEnter shouldn't fire if the ScrollTrigger isn't actually entered.\n\t\t\t\t\t\tonToggle && toggled && onToggle(self);\n\t\t\t\t\t\tcallbacks[toggleState] && callbacks[toggleState](self);\n\t\t\t\t\t\tonce && (clipped === 1 ? self.kill(false, 1) : (callbacks[toggleState] = 0)); // a callback shouldn't be called again if once is true.\n\t\t\t\t\t\tif (!toggled) { // it's possible to go completely past, like from before the start to after the end (or vice-versa) in which case BOTH callbacks should be fired in that order\n\t\t\t\t\t\t\ttoggleState = clipped === 1 ? 1 : 3;\n\t\t\t\t\t\t\tcallbacks[toggleState] && callbacks[toggleState](self);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (isToggle && onUpdate && !_refreshing) {\n\t\t\t\t\tonUpdate(self);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// update absolutely-positioned markers (only if the scroller isn't the viewport)\n\t\t\tif (markerEndSetter) {\n\t\t\t\tmarkerStartSetter(scroll + (markerStartTrigger._isFlipped ? 1 : 0));\n\t\t\t\tmarkerEndSetter(scroll);\n\t\t\t}\n\t\t};\n\n\t\tself.enable = () => {\n\t\t\tif (!self.enabled) {\n\t\t\t\tself.enabled = true;\n\t\t\t\t_addListener(scroller, \"resize\", _onResize);\n\t\t\t\t_addListener(scroller, \"scroll\", _onScroll);\n\t\t\t\tonRefreshInit && _addListener(ScrollTrigger, \"refreshInit\", onRefreshInit);\n\t\t\t\t!animation || !animation.add ? self.refresh() : gsap.delayedCall(0.01, () => start || end || self.refresh()) && (change = 0.01) && (start = end = 0); // if the animation is a timeline, it may not have been populated yet, so it wouldn't render at the proper place on the first refresh(), thus we should schedule one for the next tick.\n\t\t\t}\n\t\t};\n\n\t\tself.disable = (reset, allowAnimation) => {\n\t\t\tif (self.enabled) {\n\t\t\t\treset !== false && self.revert();\n\t\t\t\tself.enabled = self.isActive = false;\n\t\t\t\tallowAnimation || (scrubTween && scrubTween.pause());\n\t\t\t\tprevScroll = 0;\n\t\t\t\tpinCache && (pinCache.uncache = 1);\n\t\t\t\tonRefreshInit && _removeListener(ScrollTrigger, \"refreshInit\", onRefreshInit);\n\t\t\t\tif (snapDelayedCall) {\n\t\t\t\t\tsnapDelayedCall.pause();\n\t\t\t\t\ttweenTo.tween && tweenTo.tween.kill();\n\t\t\t\t}\n\t\t\t\tif (!isViewport) {\n\t\t\t\t\tlet i = _triggers.length;\n\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\tif (_triggers[i].scroller === scroller && _triggers[i] !== self) {\n\t\t\t\t\t\t\treturn; //don't remove the listeners if there are still other triggers referencing it.\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t_removeListener(scroller, \"resize\", _onResize);\n\t\t\t\t\t_removeListener(scroller, \"scroll\", _onScroll);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tself.kill = (revert, allowAnimation) => {\n\t\t\tself.disable(revert, allowAnimation);\n\t\t\tid && (delete _ids[id]);\n\t\t\tlet i = _triggers.indexOf(self);\n\t\t\t_triggers.splice(i, 1);\n\t\t\ti === _i && _direction > 0 && _i--; // if we're in the middle of a refresh() or update(), splicing would cause skips in the index, so adjust...\n\t\t\tif (animation) {\n\t\t\t\tanimation.scrollTrigger = null;\n\t\t\t\trevert && animation.render(-1);\n\t\t\t\tallowAnimation || animation.kill();\n\t\t\t}\n\t\t\tmarkerStart && [markerStart, markerEnd, markerStartTrigger, markerEndTrigger].forEach(m => m.parentNode.removeChild(m));\n\t\t\tpinCache && (pinCache.uncache = 1);\n\t\t};\n\n\t\tself.enable();\n\t}\n\n\n\tstatic register(core) {\n\t\tif (!_coreInitted) {\n\t\t\tgsap = core || _getGSAP();\n\t\t\tif (_windowExists() && window.document) {\n\t\t\t\t_win = window;\n\t\t\t\t_doc = document;\n\t\t\t\t_docEl = _doc.documentElement;\n\t\t\t\t_body = _doc.body;\n\t\t\t}\n\t\t\tif (gsap) {\n\t\t\t\t_toArray = gsap.utils.toArray;\n\t\t\t\t_clamp = gsap.utils.clamp;\n\t\t\t\tgsap.core.globals(\"ScrollTrigger\", ScrollTrigger); // must register the global manually because in Internet Explorer, functions (classes) don't have a \"name\" property.\n\t\t\t\tif (_body) {\n\t\t\t\t\t_raf = _win.requestAnimationFrame || (f => setTimeout(f, 16));\n\t\t\t\t\t_addListener(_win, \"mousewheel\", _onScroll);\n\t\t\t\t\t_root = [_win, _doc, _docEl, _body];\n\t\t\t\t\t_addListener(_doc, \"scroll\", _onScroll); // some browsers (like Chrome), the window stops dispatching scroll events on the window if you scroll really fast, but it's consistent on the document!\n\t\t\t\t\tlet bodyStyle = _body.style,\n\t\t\t\t\t\tborder = bodyStyle.borderTop,\n\t\t\t\t\t\tbounds;\n\t\t\t\t\tbodyStyle.borderTop = \"1px solid #000\"; // works around an issue where a margin of a child element could throw off the bounds of the _body, making it seem like there's a margin when there actually isn't. The border ensures that the bounds are accurate.\n\t\t\t\t\tbounds = _getBounds(_body);\n\t\t\t\t\t_vertical.m = Math.round(bounds.top + _vertical.sc()) || 0; // accommodate the offset of the <body> caused by margins and/or padding\n\t\t\t\t\t_horizontal.m = Math.round(bounds.left + _horizontal.sc()) || 0;\n\t\t\t\t\tborder ? (bodyStyle.borderTop = border) : bodyStyle.removeProperty(\"border-top\");\n\t\t\t\t\t_syncInterval = setInterval(_sync, 200);\n\t\t\t\t\tgsap.delayedCall(0.5, () => _startup = 0);\n\t\t\t\t\t_addListener(_doc, \"touchcancel\", _passThrough); // some older Android devices intermittently stop dispatching \"touchmove\" events if we don't listen for \"touchcancel\" on the document.\n\t\t\t\t\t_addListener(_body, \"touchstart\", _passThrough); //works around Safari bug: https://greensock.com/forums/topic/21450-draggable-in-iframe-on-mobile-is-buggy/\n\t\t\t\t\t_multiListener(_addListener, _doc, \"pointerdown,touchstart,mousedown\", () => _pointerIsDown = 1);\n\t\t\t\t\t_multiListener(_addListener, _doc, \"pointerup,touchend,mouseup\", () => _pointerIsDown = 0);\n\t\t\t\t\t_transformProp = gsap.utils.checkPrefix(\"transform\");\n\t\t\t\t\t_stateProps.push(_transformProp);\n\t\t\t\t\t_coreInitted = _getTime();\n\t\t\t\t\t_resizeDelay = gsap.delayedCall(0.2, _refreshAll).pause();\n\t\t\t\t\t_autoRefresh = [_doc, \"visibilitychange\", () => {\n\t\t\t\t\t\tlet w = _win.innerWidth,\n\t\t\t\t\t\t\th = _win.innerHeight;\n\t\t\t\t\t\tif (_doc.hidden) {\n\t\t\t\t\t\t\t_prevWidth = w;\n\t\t\t\t\t\t\t_prevHeight = h;\n\t\t\t\t\t\t} else if (_prevWidth !== w || _prevHeight !== h) {\n\t\t\t\t\t\t\t_onResize();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, _doc, \"DOMContentLoaded\", _refreshAll, _win, \"load\", () => _lastScrollTime || _refreshAll(), _win, \"resize\", _onResize];\n\t\t\t\t\t_iterateAutoRefresh(_addListener);\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn _coreInitted;\n\t}\n\n\tstatic defaults(config) {\n\t\tfor (let p in config) {\n\t\t\t_defaults[p] = config[p];\n\t\t}\n\t}\n\n\tstatic kill() {\n\t\t_enabled = 0;\n\t\t_triggers.slice(0).forEach(trigger => trigger.kill(1));\n\t}\n\n\tstatic config(vars) {\n\t\t(\"limitCallbacks\" in vars) && (_limitCallbacks = !!vars.limitCallbacks);\n\t\tlet ms = vars.syncInterval;\n\t\tms && clearInterval(_syncInterval) || ((_syncInterval = ms) && setInterval(_sync, ms));\n\t\t(\"autoRefreshEvents\" in vars) && (_iterateAutoRefresh(_removeListener) || _iterateAutoRefresh(_addListener, vars.autoRefreshEvents || \"none\"));\n\t}\n\n\tstatic scrollerProxy(target, vars) {\n\t\tlet t = _toArray(target)[0];\n\t\t_isViewport(t) ? _proxies.unshift(_win, vars, _body, vars, _docEl, vars) : _proxies.unshift(t, vars);\n\t}\n\n\tstatic matchMedia(vars) {\n\t\tlet mq, p, i, func, result;\n\t\tfor (p in vars) {\n\t\t\ti = _media.indexOf(p);\n\t\t\tfunc = vars[p];\n\t\t\t_creatingMedia = p;\n\t\t\tif (p === \"all\") {\n\t\t\t\tfunc();\n\t\t\t} else {\n\t\t\t\tmq = _win.matchMedia(p);\n\t\t\t\tif (mq) {\n\t\t\t\t\tmq.matches && (result = func());\n\t\t\t\t\tif (~i) {\n\t\t\t\t\t\t_media[i + 1] = _combineFunc(_media[i + 1], func);\n\t\t\t\t\t\t_media[i + 2] = _combineFunc(_media[i + 2], result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ti = _media.length;\n\t\t\t\t\t\t_media.push(p, func, result);\n\t\t\t\t\t\tmq.addListener ? mq.addListener(_onMediaChange) : mq.addEventListener(\"change\", _onMediaChange);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t_creatingMedia = 0;\n\t\t}\n\t\treturn _media;\n\t}\n\n\tstatic clearMatchMedia(query) {\n\t\tquery || (_media.length = 0);\n\t\tquery = _media.indexOf(query);\n\t\tquery >= 0 && _media.splice(query, 3);\n\t}\n\n}\n\nScrollTrigger.version = \"3.5.0\";\nScrollTrigger.saveStyles = targets => targets ? _toArray(targets).forEach(target => {\n\tlet i = _savedStyles.indexOf(target);\n\ti >= 0 && _savedStyles.splice(i, 4);\n\t_savedStyles.push(target, target.style.cssText, gsap.core.getCache(target), _creatingMedia);\n}) : _savedStyles;\nScrollTrigger.revert = (soft, media) => _revertAll(!soft, media);\nScrollTrigger.create = (vars, animation) => new ScrollTrigger(vars, animation);\nScrollTrigger.refresh = safe => safe ? _onResize() : _refreshAll(true);\nScrollTrigger.update = _updateAll;\nScrollTrigger.maxScroll = (element, horizontal) => _maxScroll(element, horizontal ? _horizontal : _vertical);\nScrollTrigger.getScrollFunc = (element, horizontal) => _getScrollFunc(_toArray(element)[0], horizontal ? _horizontal : _vertical);\nScrollTrigger.getById = id => _ids[id];\nScrollTrigger.getAll = () => _triggers.slice(0);\nScrollTrigger.isScrolling = () => !!_lastScrollTime;\nScrollTrigger.addEventListener = (type, callback) => {\n\tlet a = _listeners[type] || (_listeners[type] = []);\n\t~a.indexOf(callback) || a.push(callback);\n};\nScrollTrigger.removeEventListener = (type, callback) => {\n\tlet a = _listeners[type],\n\t\ti = a && a.indexOf(callback);\n\ti >= 0 && a.splice(i, 1);\n};\nScrollTrigger.batch = (targets, vars) => {\n\tlet result = [],\n\t\tvarsCopy = {},\n\t\tinterval = vars.interval || 0.016,\n\t\tbatchMax = vars.batchMax || 1e9,\n\t\tproxyCallback = (type, callback) => {\n\t\t\tlet elements = [],\n\t\t\t\ttriggers = [],\n\t\t\t\tdelay = gsap.delayedCall(interval, () => {callback(elements, triggers); elements = []; triggers = [];}).pause();\n\t\t\treturn self => {\n\t\t\t\telements.length || delay.restart(true);\n\t\t\t\telements.push(self.trigger);\n\t\t\t\ttriggers.push(self);\n\t\t\t\tbatchMax <= elements.length && delay.progress(1);\n\t\t\t};\n\t\t},\n\t\tp;\n\tfor (p in vars) {\n\t\tvarsCopy[p] = (p.substr(0, 2) === \"on\" && _isFunction(vars[p]) && p !== \"onRefreshInit\") ? proxyCallback(p, vars[p]) : vars[p];\n\t}\n\tif (_isFunction(batchMax)) {\n\t\tbatchMax = batchMax();\n\t\t_addListener(ScrollTrigger, \"refresh\", () => batchMax = vars.batchMax());\n\t}\n\t_toArray(targets).forEach(target => {\n\t\tlet config = {};\n\t\tfor (p in varsCopy) {\n\t\t\tconfig[p] = varsCopy[p];\n\t\t}\n\t\tconfig.trigger = target;\n\t\tresult.push(ScrollTrigger.create(config));\n\t});\n\treturn result;\n}\nScrollTrigger.sort = func => _triggers.sort(func || ((a, b) => (a.vars.refreshPriority || 0) * -1e6 + a.start - (b.start + (b.vars.refreshPriority || 0) * -1e6)));\n\n_getGSAP() && gsap.registerPlugin(ScrollTrigger);\n\nexport { ScrollTrigger as default };"],"names":["_passThrough","v","_windowExists","window","_getGSAP","gsap","registerPlugin","_isViewport","e","_root","indexOf","_getProxyProp","element","property","_proxies","_getScrollFunc","s","sc","i","_scrollers","offset","_vertical","push","value","arguments","length","_getBoundsFunc","_winOffsets","width","_win","innerWidth","height","innerHeight","_getBounds","_maxScroll","d2","d","a","Math","max","_docEl","_body","_iterateAutoRefresh","func","events","_autoRefresh","_isString","_isFunction","_isNumber","_isObject","_callIfFunc","_combineFunc","f1","f2","result1","result2","_getComputedStyle","getComputedStyle","_setDefaults","obj","defaults","p","_getSize","_multiListener","types","callback","split","forEach","type","_addListener","addEventListener","passive","_removeListener","removeEventListener","_offsetToPx","size","eqIndex","relative","charAt","parseFloat","substr","_keywords","_createMarker","name","container","direction","matchWidthEl","startColor","endColor","fontSize","indent","fontWeight","_doc","createElement","useFixedPosition","isScroller","parent","isStart","color","css","_right","_bottom","offsetWidth","_isStart","setAttribute","style","cssText","innerText","insertBefore","children","_offset","op","_positionMarker","_sync","_request","_raf","_updateAll","_onScroll","_lastScrollTime","_dispatch","_getTime","_onResize","_refreshing","_resizeDelay","restart","_onMediaChange","tick","ticker","frame","matches","_lastMediaTick","_startup","_revertAll","_media","matchMedia","_revertRecorded","_creatingMedia","_refreshAll","_softRefresh","ScrollTrigger","_swapPinIn","pin","spacer","cs","spacerState","parentNode","_propNamesToCopy","spacerStyle","pinStyle","position","display","overflow","boxSizing","_width","_horizontal","_px","_height","_padding","_margin","_left","_setState","appendChild","_getState","l","_stateProps","state","t","_parsePosition","trigger","scrollerSize","scroll","marker","markerScroller","self","scrollerBounds","borderWidth","scrollerMax","localOffset","globalOffset","_toArray","bounds","offsets","left","top","removeProperty","m","round","_getTweenCreator","scroller","lastScroll1","lastScroll2","getScroll","prop","p2","getTween","scrollTo","vars","initialValue","change1","change2","tween","onComplete","modifiers","kill","ratio","call","to","_coreInitted","_clamp","_time2","_syncInterval","_pointerIsDown","_transformProp","_i","_prevWidth","_prevHeight","_sort","_limitCallbacks","Date","now","_time1","_enabled","_abs","abs","_scrollLeft","_scrollTop","_Right","_Left","_Top","_Bottom","_Width","_Height","os","os2","pageXOffset","pageYOffset","withoutTransforms","x","y","xPercent","yPercent","rotation","rotationX","rotationY","scale","skewX","skewY","progress","getBoundingClientRect","_markerDefaults","_defaults","toggleActions","anticipatePin","center","bottom","right","start","flipped","side","oppositeSide","_isFlipped","set","_triggers","_ids","_listeners","_emptyArray","map","f","_savedStyles","media","uncache","rec","revert","force","skipRevert","refreshInits","sort","refresh","result","render","_lastScroll","_direction","time","recordVelocity","update","concat","_capsExp","replace","toLowerCase","_prefixExp","init","animation","this","tweenTo","pinCache","snapFunc","isReverted","scroll1","scroll2","end","markerStart","markerEnd","markerStartTrigger","markerEndTrigger","markerVars","change","pinOriginalState","pinActiveState","pinState","pinGetter","pinSetter","pinStart","pinChange","spacingStart","markerStartSetter","markerEndSetter","snap1","snap2","scrubTween","scrubSmooth","snapDurClamp","snapDelayedCall","prevProgress","prevScroll","prevAnimProgress","nodeType","horizontal","onUpdate","toggleClass","id","onToggle","onRefresh","scrub","pinSpacing","invalidateOnRefresh","onScrubComplete","onSnapComplete","once","snap","pinReparent","isToggle","scrollerCache","core","getCache","isViewport","pinType","callbacks","onEnter","onLeave","onEnterBack","onLeaveBack","markers","onRefreshInit","getScrollerSize","_getSizeFunc","getScrollerOffsets","_getOffsetsFunc","tweenScroll","lazy","_initted","immediateRender","pause","scrollTrigger","ease","duration","snapTo","scrollBehavior","_getLabels","labels","utils","min","delayedCall","delay","getVelocity","totalProgress","velocity","naturalEnd","endValue","endScroll","data","isActive","targets","className","force3D","getProperty","quickSetter","_makePositionable","r","enabled","prevRefreshing","_swapPinOut","removeChild","soft","invalidate","isVertical","override","curTrigger","curPin","oppositeScroll","otherPinOffset","parsedEnd","parsedEndTrigger","endTrigger","parsedStart","triggerIndex","_pinPush","ceil","_copyState","omitOffsets","splice","_pinOffset","reset","toggleState","action","stateChanged","toggled","clipped","_reparent","_stOrig","test","el","classList","enable","add","disable","allowAnimation","register","document","documentElement","body","toArray","clamp","globals","requestAnimationFrame","setTimeout","bodyStyle","border","borderTop","setInterval","checkPrefix","w","h","hidden","config","slice","limitCallbacks","ms","syncInterval","clearInterval","autoRefreshEvents","scrollerProxy","target","unshift","mq","addListener","clearMatchMedia","query","console","warn","version","saveStyles","create","safe","maxScroll","getScrollFunc","getById","getAll","isScrolling","batch","proxyCallback","elements","triggers","interval","batchMax","varsCopy","b","refreshPriority"],"mappings":"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"}